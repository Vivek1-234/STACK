//  progam of the three sum problem ---->>>>>>>>
//  if we will solve this in the brute force approach ---->>>  then the  T.COMPLEXITY will be ---->>>>>>>>o(n3);
//   but if we will sove with the two pointer approach -->>>>  we can solve this o(n2)------>>>>>>>
// example ----->>>>>>>>>  n =6 , trget =5 ----->>>>>> [ 12 , 3, 7, 1, 6 ,9]  --->>>>>  false ---->>>>

//  let see the code ------>>>>>>>>>>


#include<bits/stdc++.h>
using namespace std;

int32_t main(){
int n ; cin>>n ;
int target ;
 cin>>target;

vector<int> a(n);
for(auto &i : a ){
    cin>>i;
    }

    bool found = false ;
    sort(a.begin() , a.end());

    for(int i =0 ; i<n ; i++){
        int lo = i+1  ,  hi = n-1;
        while(lo<hi){
            int current = a[i] + a[lo] + a[hi];

            if(current == target){
                found = true ;
            }
            if (current>target){
                hi--;
            }
            else{
                lo++;
            }
        }

    }

    if(found){
        cout<<"TRUE"<<endl;

    }
    else{
        cout<<"FALSE"<<endl;
    }

return 0;
 }
