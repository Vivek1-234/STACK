// program to check the balanced paranthesis or not ----------->>>>>>>>>>>
//  example ------>>>>>>> {[()]}  --->>>>>>>>  yes this is a balanced paranthesis ------------->>>>>>
// other example ---------->>>>>>>>>> [({}])   no this is not a balanced paranthiesis -------->>>>>>>>>


#include<iostream>
#include<stack>

using namespace std;

bool balancedparenthesis(string s ){
    bool ans = true ; 
    stack<char> st ;

    for(int i =0;i<s.length() ; i++){

           if(s[i]== '(' || s[i] == '{' || s[i] == '['){
               st.push(s[i]);

           }
           else if (s[i] == ')'){
               if(st.top() == '('){
                   st.pop();
               }

               else{
                   ans = false;
                   break;
               }


           }
            else if (s[i] == '}'){
               if(st.top() == '{'){
                   st.pop();
               }

               else{
                   ans = false;
                   break;
               }


           }
            else if (s[i] == ']'){
               if(st.top() == '['){
                   st.pop();
               }

               else{
                   ans = false;
                   break;
               }


           }
          

    }

    if(!st.empty()){
        return false;
    }
    return true ;
}

int main(){
  string s =  "{[()]}";

     if(balancedparenthesis(s)){
    cout<<"VALID STRING "<<endl;

   }
 else{
    cout<<"INVALID STRING "<<endl;
  }

return 0;
 }
